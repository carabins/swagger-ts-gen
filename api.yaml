info:
  version: "0.8.4"
  title: "STE Backend API"
host: "localhost"
basePath: "/v1"
tags:
- name: "token"
  description: "Semantic Token"
- name: "template"
  description: "Template"
- name: "template's sample"
  description: "Sample message of template"
- name: "template's answer"
  description: "Answer for template"
- name: "template's rule"
  description: "Rule for template"
- name: "bot"
  description: "Manual test tools"
- name: "tests"
  description: "Automated test tools"
- name: "download"
  description: "Download files"
- name: "placeholder"
  description: "Placeholder for template"
schemes:
- "http"
paths:
  /auth:
    get:
      tags:
      - "auth"
      summary: "JWT token validation"
      description: "Check if auth token is valid"
      operationId: "check_auth"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "Successful"
        401:
          description: "Invalid token"
      x-swagger-router-controller: "swagger_server.controllers.auth_controller"
    post:
      tags:
      - "auth"
      summary: "User authentication"
      description: "Return JWT"
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Credentials"
        required: true
        schema:
          $ref: "#/definitions/Credentials"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/JWT"
        400:
          description: "Invalid credentials"
      x-swagger-router-controller: "swagger_server.controllers.auth_controller"
  /api:
    get:
      tags:
      - "API information"
      summary: "Get API information"
      description: "Returns API version and title from current swagger specification"
      operationId: "information"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              version:
                type: "string"
              title:
                type: "string"
      x-swagger-router-controller: "swagger_server.controllers.app_controller"
  /intent:
    get:
      tags:
      - "token"
      summary: "Get intents of dialogs"
      description: "Returns intents"
      operationId: "get_intents"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "withoutTemplate"
        in: "query"
        required: false
        type: "boolean"
      - name: "operator"
        in: "query"
        required: false
        type: "boolean"
      - name: "rewindToTokenId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              tokens:
                type: "array"
                items:
                  $ref: "#/definitions/Token"
              pagination:
                $ref: "#/definitions/Pagination"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.token_controller"
  /token/chain/{chain}:
    get:
      tags:
      - "token"
      summary: "Get semantic tokens by chain"
      description: "Returns semantic tokens"
      operationId: "get_tokens_by_chain"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "chain"
        in: "path"
        description: "Chain from semantic tokens divided by comma"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int64"
          minimum: 1
        minItems: 1
        collectionFormat: "csv"
      - name: "length"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0
      - name: "rewindToTokenId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              tokens:
                type: "array"
                items:
                  $ref: "#/definitions/Token"
              pagination:
                $ref: "#/definitions/Pagination"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.token_controller"
  /token/search:
    get:
      tags:
      - "token"
      summary: "Get semantic tokens with name containing specified substring"
      description: "Returns semantic tokens"
      operationId: "search_tokens"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "text"
        in: "query"
        description: "Semantic token name substring to look for"
        required: true
        type: "string"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              tokens:
                type: "array"
                items:
                  $ref: "#/definitions/Token"
              pagination:
                $ref: "#/definitions/Pagination"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.token_controller"
  /token/{id}/cluster:
    get:
      tags:
      - "token"
      summary: "Get cluster of semantic token"
      description: "Returns cluster if semantic token"
      operationId: "get_token_cluster"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Semantic token id"
        required: true
        type: "integer"
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              cluster:
                type: "array"
                items:
                  type: "string"
                  example: "What is going on?"
              pagination:
                $ref: "#/definitions/Pagination"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Token not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.token_controller"
  /token/{id}/merge:
    get:
      tags:
      - "token"
      summary: "Get semantic tokens for merge to semantic token"
      description: "Returns semantic tokens"
      operationId: "search_tokens_for_merge"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Semantic token id"
        required: true
        type: "integer"
        format: "int64"
      - name: "text"
        in: "query"
        description: "Semantic token name substring to look for"
        required: false
        type: "string"
      - name: "threshold"
        in: "query"
        description: "Threshold proximity"
        required: false
        type: "number"
        maximum: 1
        minimum: 0
      - name: "chain"
        in: "query"
        description: "Chain from semantic tokens divided by comma"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int64"
          minimum: 1
        minItems: 1
        collectionFormat: "csv"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              tokens:
                type: "array"
                items:
                  $ref: "#/definitions/Token"
              pagination:
                $ref: "#/definitions/Pagination"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Target token not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.token_controller"
    post:
      tags:
      - "token"
      summary: "Merge semantic tokens to semantic token"
      description: "Return updated semantic token"
      operationId: "merge_tokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Semantic token id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Semantic token id"
        required: true
        schema:
          $ref: "#/definitions/MergeTokens"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Token"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Target token not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.token_controller"
  /token/{id}:
    put:
      tags:
      - "token"
      summary: "Update semantic token"
      description: "Return updated semantic token"
      operationId: "update_token"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Semantic token id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Semantic token id"
        required: true
        schema:
          $ref: "#/definitions/Token"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Token"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Token not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.token_controller"
  /template:
    get:
      tags:
      - "template"
      summary: "Get templates"
      operationId: "get_templates"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "placeholder"
        in: "query"
        type: "string"
        minLength: 1
        description: "Placeholder name"
      - name: "text"
        in: "query"
        type: "string"
        minLength: 1
        description: "Text contained in a template"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              templates:
                type: "array"
                items:
                  $ref: "#/definitions/Template"
              pagination:
                $ref: "#/definitions/Pagination"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.template_controller"
    post:
      tags:
      - "template"
      summary: "Create template"
      operationId: "create_template"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Source for new template"
        required: true
        schema:
          $ref: "#/definitions/SourceTemplate"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Template"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.template_controller"
  /template/export:
    get:
      tags:
      - "template"
      summary: "Export templates"
      operationId: "export_templates"
      produces:
      # We need get_mimetype()
      # (https://github.com/zalando/connexion/blob/master/connexion/operation.py#L327)
      # to not return anything json'ey.
      # Otherwise response validation will crash
      # trying to parse octet stream as json.
      - "application/octet-stream"
      parameters:
      - name: "token"
        in: "query"
        required: true
        type: "string"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        enum: ["dialogflow", 'csv']
      responses:
        200:
          description: "A zip/csv file"
          schema:
            type: "file"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidFileTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.template_controller"
  /template/{id}/similarity:
    get:
      tags:
      - "template"
      - "template's sample"
      summary: "Show similar templates by template / sample"
      operationId: "get_similar"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
      - name: "sample"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                sample:
                  type: "string"
                templates:
                  type: "array"
                  items:
                    $ref: "#/definitions/Template"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Template not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.template_controller"
  /template/{id}:
    get:
      tags:
      - "template"
      summary: "Get template"
      operationId: "get_template"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Template"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Template not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.template_controller"
    patch:
      tags:
      - "template"
      summary: "Update template attributes: name, state"
      operationId: "update_template"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Template"
        required: true
        schema:
          $ref: "#/definitions/PartialTemplate"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Template"
        400:
          description: "Missing update values"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Template not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: "Template validation failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.template_controller"
    delete:
      tags:
      - "template"
      summary: "Delete template"
      operationId: "delete_template"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Template not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.template_controller"
  /template/{id}/merge:
    get:
      tags:
      - "template"
      summary: "Get semantic tokens for samples adding to template"
      description: "Returns semantic tokens"
      operationId: "search_tokens_for_merge_to_template"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      - name: "text"
        in: "query"
        description: "Text of desired semantic token"
        required: false
        type: "string"
      - name: "threshold"
        in: "query"
        description: "Threshold proximity"
        required: false
        type: "number"
        maximum: 1
        minimum: 0
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              tokens:
                type: "array"
                items:
                  $ref: "#/definitions/Token"
              pagination:
                $ref: "#/definitions/Pagination"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Template not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.template_controller"
    post:
      tags:
      - "template"
      summary: "Merge semantic tokens to template"
      description: "Return updated template"
      operationId: "merge_tokens_to_template"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Semantic token id"
        required: true
        schema:
          $ref: "#/definitions/MergeTokens"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Template"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Template not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.template_controller"
  /template/{id}/sample:
    post:
      tags:
      - "template's sample"
      summary: "Add sample to template"
      description: ""
      operationId: "add_question"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "New sample data"
        required: true
        schema:
          $ref: "#/definitions/PartialTemplateMessage"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/TemplateMessage"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Template not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.question_controller"
    get:
      tags:
      - "template's sample"
      summary: "Get samples of template"
      description: ""
      operationId: "get_questions"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              samples:
                type: "array"
                items:
                  $ref: "#/definitions/TemplateMessage"
              pagination:
                $ref: "#/definitions/Pagination"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Template not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.question_controller"
  /sample/{id}:
    put:
      tags:
      - "template's sample"
      summary: "Update template's sample"
      description: ""
      operationId: "update_question"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Sample id"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Sample"
        required: true
        schema:
          $ref: "#/definitions/TemplateMessage"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/TemplateMessage"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Question not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: "Validation failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.question_controller"
    delete:
      tags:
      - "template's sample"
      summary: "Delete question from template messages"
      operationId: "delete_question"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Sample id"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Question not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: "Template validation failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.question_controller"
  /template/{id}/answer:
    post:
      tags:
      - "template's answer"
      summary: "Add answer for template"
      description: ""
      operationId: "add_answer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "New answer data"
        required: true
        schema:
          $ref: "#/definitions/PartialTemplateMessage"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/TemplateMessage"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Template does not exist"
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: "Validation failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.answer_controller"
    get:
      tags:
      - "template's answer"
      summary: "Get answers of template"
      description: ""
      operationId: "get_answers"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              answers:
                type: "array"
                items:
                  $ref: "#/definitions/TemplateMessage"
              pagination:
                $ref: "#/definitions/Pagination"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Template does not exist"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.answer_controller"
  /answer/{id}:
    put:
      tags:
      - "template's answer"
      summary: "Update template's answer"
      description: ""
      operationId: "update_answer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Answer id"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Sample"
        required: true
        schema:
          $ref: "#/definitions/TemplateMessage"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/TemplateMessage"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Answer not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: "Validation failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.answer_controller"
    delete:
      tags:
      - "template's answer"
      summary: "Delete template's answer"
      operationId: "delete_answer"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Answer id"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Answer not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: "Template validation failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.answer_controller"
  /template/{id}/answer/tips:
    get:
      tags:
      - "template's answer"
      summary: "Get tips for answer of template"
      description: ""
      operationId: "get_answer_tips"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful"
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Template not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.answer_controller"
  /template/{id}/rule:
    get:
      tags:
      - "template's rule"
      summary: "Get rule of template"
      description: ""
      operationId: "get_rule"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/TemplateRule"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.rule_controller"
    put:
      tags:
      - "template's rule"
      summary: "Change template's rule"
      description: ""
      operationId: "create_or_update_rule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Rule data"
        required: true
        schema:
          $ref: "#/definitions/TemplateRule"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/TemplateRule"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Rule not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: "Validation failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.rule_controller"
    delete:
      tags:
      - "template's rule"
      summary: "Delete template's rule"
      operationId: "delete_rule"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Rule not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: "Validation failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.rule_controller"
  /bot/tips:
    get:
      tags:
      - "bot"
      summary: "Get questions for testing"
      description: ""
      operationId: "get_tips"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "templates"
        in: "query"
        description: "Template id divided by comma"
        required: false
        type: "array"
        items:
          type: "integer"
          minimum: 1
        minItems: 1
        collectionFormat: "csv"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      responses:
        200:
          description: "Successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TipQuestion"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.bot_controller"
  /bot/question:
    post:
      tags:
      - "bot"
      summary: "Request with question"
      description: ""
      operationId: "send_question"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Dialog's question"
        required: true
        schema:
          $ref: "#/definitions/Question"
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              contextId:
                type: "string"
                format: "uuid"
                minLength: 1
              tips:
                type: "array"
                items:
                  $ref: "#/definitions/TipAnswer"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        500:
          description: "Inconsistent tip encountered"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.bot_controller"
  /bot/answer:
    post:
      tags:
      - "bot"
      summary: "Request with answer"
      description: ""
      operationId: "send_answer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Dialog's answer"
        required: true
        schema:
          $ref: "#/definitions/Answer"
      responses:
        200:
          description: "Successful"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.bot_controller"
  /bot/report:
    post:
      tags:
      - "bot"
      summary: "Send report about bad tips"
      description: ""
      operationId: "send_report"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Report"
        required: true
        schema:
          $ref: "#/definitions/Report"
      responses:
        200:
          description: "Successful"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.bot_controller"
    get:
      tags:
      - "bot"
      summary: "Download reports about bad tips"
      description: ""
      operationId: "get_reports"
      produces:
      - "application/x-gzip"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "date_from"
        in: "query"
        required: false
        type: "string"
        format: "date"
      responses:
        200:
          description: "Successful"
          schema:
            type: "file"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.bot_controller"
  /test/templates:
    get:
      tags:
      - "tests"
      summary: "Perform automated testing for templates"
      description: ""
      operationId: "test_templates"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "public"
        in: "query"
        required: true
        type: "boolean"
      responses:
        200:
          description: "Successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TemplateTestResult"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.test_controller"
  /file/token:
    get:
      tags:
      - "download"
      summary: "Obtain a JWT token for a file download"
      description: ""
      operationId: "get_download_token"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              token:
                type: "string"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.app_controller"
  /placeholder:
    get:
      tags:
      - "placeholder"
      summary: "Get all placeholders"
      description: "Return list of placeholders"
      operationId: "get_placeholders"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        minimum: 1
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        minimum: 0
      responses:
        200:
          description: "Successful"
          schema:
            type: "object"
            properties:
              placeholders:
                type: "array"
                items:
                  $ref: "#/definitions/Placeholder"
              pagination:
                $ref: "#/definitions/Pagination"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.placeholder_controller"
    post:
      tags:
      - "placeholder"
      summary: "Create new placeholder"
      description: "Return created placeholder"
      operationId: "create_placeholder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Placeholder"
        required: true
        schema:
          $ref: "#/definitions/PartialPlaceholder"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Placeholder"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
      x-swagger-router-controller: "swagger_server.controllers.placeholder_controller"
  /placeholder/{id}:
    put:
      tags:
      - "placeholder"
      summary: "Update placeholder value"
      description: "Return updated placeholder"
      operationId: "update_placeholder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Placeholder id"
        required: true
        type: "integer"
        minimum: 1
      - in: "body"
        name: "body"
        description: "Placeholder"
        required: true
        schema:
          $ref: "#/definitions/Placeholder"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Placeholder"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Placeholder not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.placeholder_controller"
    delete:
      tags:
      - "placeholder"
      summary: "Delete placeholder"
      description: ""
      operationId: "delete_placeholder"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Placeholder id"
        required: true
        type: "integer"
        minimum: 1
      responses:
        200:
          description: "Successful"
        400:
          description: "Wrong parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Not authenticated"
          schema:
            $ref: "#/definitions/InvalidTokenResponse"
        404:
          description: "Placeholder not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.placeholder_controller"
definitions:
  Credentials:
    type: "object"
    required:
    - "password"
    - "username"
    properties:
      username:
        type: "string"
      password:
        type: "string"
  JWT:
    type: "object"
    required:
    - "access_token"
    properties:
      access_token:
        type: "string"
  Token:
    type: "object"
    required:
      - "id"
      - "text"
      - "concepts"
      - "operator"
      - "hidden"
      - "size"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 42
      text:
        type: "string"
        minLength: 1
        example: "What is going on?"
      concepts:
        type: "array"
        items:
          type: "string"
          minLength: 1
          example: "going on"
        minItems: 1
      operator:
        type: "boolean"
      hidden:
        type: "boolean"
      size:
        type: "integer"
        format: "int64"
        example: 42
        minimum: 0
      share:
        type: "number"
        format: "float"
        example: 42.42
        minimum: 0
        maximum: 100
  MergeTokens:
    type: "array"
    items:
      type: "integer"
      format: "int64"
      minimum: 1
      example: 42
    minItems: 1
  SourceTemplate:
    type: "object"
    properties:
      tokenId:
        type: "integer"
        format: "int64"
        example: 42
  PartialTemplate:
    type: "object"
    required:
      - "id"
    properties:
      id:
        type: "integer"
        example: 42
      name:
        type: "string"
        minLength: 1
        example: "What is going on?"
      state:
        $ref: "#/definitions/TemplateState"
      solverType:
        $ref: "#/definitions/SolverType"
      bot:
        type: "boolean"
  Template:
    type: "object"
    required:
      - "id"
      - "name"
      - "concepts"
      - "bot"
      - "state"
      - "solverType"
    properties:
      id:
        type: "integer"
        example: 42
      name:
        type: "string"
        minLength: 1
        example: "What is going on?"
      concepts:
        type: "array"
        items:
          type: "string"
          minLength: 1
          example: "going on"
      bot:
        type: "boolean"
      state:
        $ref: "#/definitions/TemplateState"
      solverType:
        $ref: "#/definitions/SolverType"
  PartialTemplateMessage:
    type: "object"
    required:
      - "text"
    properties:
      text:
        type: "string"
        minLength: 1
        example: "What is going on?"
  TemplateMessage:
    allOf:
      - $ref: "#/definitions/PartialTemplateMessage"
      - type: "object"
        required:
          - "id"
        properties:
          id:
            type: "integer"
            example: 42
  TemplateRule:
      type: "object"
      required:
        - "rule"
      properties:
        rule:
          type: "string"
        wrapper:
          type: "string"
  Pagination:
    type: "object"
    properties:
      limit:
        type: "integer"
        minimum: 1
        example: 100
      offset:
        type: "integer"
        minimum: 0
        example: 0
      amount:
        type: "integer"
        minimum: 0
        example: 424242
  TemplateState:
    type: "string"
    enum: ["draft", "test", "public"]
  SolverType:
    type: "string"
    enum: ["message", "rule"]
  TipSource:
    type: "string"
    enum: ["dialog", "chain", "template", "rule"]
  TipQuestion:
    type: "object"
    required:
      - "text"
      - "public"
    properties:
      text:
        type: "string"
        minLength: 1
      public:
        type: "boolean"
  TipAnswer:
    type: "object"
    required:
      - "text"
      - "source"
      - "confidence"
    properties:
      text:
        type: "string"
        minLength: 1
      source:
        $ref: "#/definitions/TipSource"
      confidence:
        type: "number"
        format: "float"
        example: 0.42
        minimum: 0
        maximum: 1
      bot:
        type: "boolean"
      sourceId:
        type: "integer"
        minimum: 1
  Question:
    type: "object"
    required:
      - "text"
      - "public"
    properties:
      text:
        type: "string"
        minLength: 1
      contextId:
        $ref: "#/definitions/UUID"
      public:
        type: "boolean"
  Answer:
    type: "object"
    required:
      - "text"
      - "contextId"
    properties:
      text:
        type: "string"
        minLength: 1
      contextId:
        $ref: "#/definitions/UUID"
      bot:
        type: "boolean"
      source:
        $ref: "#/definitions/TipSource"
  UUID:
    type: "string"
    format: "uuid"
    pattern: "^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$"
  Report:
    type: "object"
    required:
      - "contextId"
    properties:
      contextId:
        $ref: "#/definitions/UUID"
      tips:
        type: "array"
        items:
          $ref: "#/definitions/TipAnswer"
        minItems: 1
      comment:
        type: "string"
        minLength: 1
  TemplateTestResult:
    type: "object"
    required:
      - "id"
      - "name"
      - "failed"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
        minLength: 1
      failed:
        type: "boolean"
      questions:
        type: "array"
        items:
          type: "object"
          required:
            - "sample"
            - "failed"
          properties:
            sample:
              type: "string"
              minLength: 1
            failed:
              type: "boolean"
        minItems: 1
  PartialPlaceholder:
    type: "object"
    required:
      - "name"
      - "value"
    properties:
      name:
        $ref: "#/definitions/PlaceholderName"
      value:
        type: "string"
        minLength: 1
      description:
        type: "string"
        minLength: 1
  Placeholder:
    allOf:
      - $ref: "#/definitions/PartialPlaceholder"
      - type: "object"
        required:
          - "id"
        properties:
          id:
            type: "integer"
            minimum: 1
          templates_count:
            type: "integer"
            minimum: 0
  PlaceholderName:
    type: "string"
    pattern: "^[a-z_]+$"
    minLength: 1
  ErrorResponse:
    type: "object"
    properties:
      message:
        type: "string"
  InvalidTokenResponse:
    type: "object"
    properties:
      description:
        type: "string"
      error:
        type: "string"
      status_code:
        type: "integer"
  InvalidFileTokenResponse:
    type: "object"
    properties:
      detail:
        type: "string"
      status:
        type: "integer"
      title:
        type: "string"
      type:
        type: "string"